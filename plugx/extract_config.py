import sys 
import pefile 
import re 

def xor_decrypt(key, data):
    
    sz = len(data)
    result = bytearray(sz)
    
    for i in range(0, sz):
        result[i] = data[i] ^ ord(key[i % len(key)])
    
    return result 

def parse(data):

    folder_start = 8
    folder_end = folder_start
    folder_name = bytearray()
    for i in range(folder_start, len(data)):
        if data[i] == 0 and data[i+1] == 0:
            break 
        else:
            folder_end += 1
    folder_name = data[folder_start:folder_end].decode('utf-8').replace('\x00', '')
    print("[+] Folder name: {}".format(folder_name))
            
    mutex_start = 136
    mutex_end = mutex_start
    mutex_name = bytearray()
    for i in range(mutex_start, len(data)):
        if data[i] == 0 and data[i+1] == 0:
            break 
        else:
            mutex_end += 1
    mutex_name = data[mutex_start:mutex_end].decode('utf-8').replace('\x00', '')
    print("[+] Mutex name: {}".format(mutex_name))
    
    
    c2_marker = b"\x01\x00"
    c2_start_list = [c2_data.start() for c2_data in list(re.finditer(c2_marker, data))]
    
    print("[+] C2 servers:")
    
    for c2_start in c2_start_list:
    
        port_start, port_end = c2_start + 2, c2_start + 4
        port = data[port_start:port_end]
        port = str(int.from_bytes(port, byteorder='little', signed='false'))
        
        ip_start = port_end
        ip_end = ip_start
        while data[ip_end] != 0x00:
            ip_end += 1
        ip = data[ip_start:ip_end].decode('utf-8')
        
        print("\t- {}:{}".format(ip, port)) 
 
def main():

    filename = sys.argv[1]
    
    pe = pefile.PE(filename)
    for section in pe.sections:
        if b".data" in section.Name:
            data_section = bytearray(section.get_data())
    
    config_sz = 0x7A8
    encrypted_config = data_section[:config_sz]    
    
    key = "123456789"
    decrypted_config = xor_decrypt(key, encrypted_config)
    
    parse(decrypted_config)
   
if __name__ == "__main__":
    main()    