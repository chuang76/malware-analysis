import os
import pefile
import binascii

dlls = ["kernel32.dll", "ntdll.dll", "wininet.dll"]

export_list = []
for filename in os.listdir("C:\\Windows\\System32"): 
    if filename.lower() in dlls:
        print("[+] Find the required DLL: {}".format(filename))
        pe = pefile.PE("C:\\Windows\\System32\\" + filename)
        for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
            try:
                name = exp.name.decode("utf-8")
                export_list.append(name)
            except:
                continue

def resolve(hashed_value):
    # calculate crc32 hash value for each exported function name
    for name in export_list:
        tmp = binascii.crc32(bytes(name, "utf-8")) % (1 << 32)
        if tmp == hashed_value:
            return name

name = resolve(0xDA16A83D)
print("[+] Resolved API name: {}".format(name))            # InternetOpenA